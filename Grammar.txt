<program> --- <moduleDeclarations> <otherModules> <driverModule> <otherModules>
<moduleDeclarations> --- <moduleDeclaration> <moduleDeclarations> | EPSILON
<moduleDeclaration> --- DECLARE MODULE ID SEMICOL
<otherModules> --- <module> <otherModules> | EPSILON
<driverModule> --- DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef>
<module> --- DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef>
<ret> --- RETURNS SQBO <output_plist> SQBC SEMICOL | EPSILON
<input_plist> --- ID COLON <dataType> <input_plist1>
<input_plist1> --- COMMA ID COLON <dataType> <input_plist1> | EPSILON
<output_plist> --- ID COLON <type> <output_plist1>
<output_plist1> --- COMMA ID COLON <type> <output_plist1> | EPSILON
<dataType> --- INTEGER | REAL | BOOLEAN | ARRAY SQBO <range1> SQBC OF <type>
<type> --- INTEGER | REAL | BOOLEAN
<moduleDef> --- START <statements> END
<statements> --- <statement> <statements> | EPSILON
<statement> --- <ioStmt> | <simpleStmt> | <declareStmt> | <condionalStmt> | <iterativeStmt>
<ioStmt> --- GET_VALUE BO ID BC SEMICOL | PRINT BO <var1> BC SEMICOL
<var1> --- <var> | <booleanConst>
<booleanConst> --- TRUE | FALSE
<var> --- ID <whichId> | NUM | RNUM
<whichId> --- SQBO <index> SQBC | EPSILON
<simpleStmt> --- <assignmentStmt> | <moduleReuseStmt>
<assignmentStmt> --- ID <whichStmt>
<whichStmt> --- <lvalueIDStmt> | <lvalueARRStmt>
<lvalueIDStmt> --- ASSIGNOP <expression> SEMICOL
<lvalueARRStmt> --- SQBO <index> SQBC ASSIGNOP <expression> SEMICOL
<index> --- NUM | ID
<moduleReuseStmt> --- <optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional> --- SQBO <idList> SQBC ASSIGNOP | EPSILON
<idList> --- ID <idList1>
<idList1> --- COMMA ID <idList1> | EPSILON
<expression> --- <U> | <arithmeticBooleanExpr>
<U> --- PLUS <New> | MINUS <New>
<New> --- BO <arithmeticExpr> BC | <var>
<arithmeticBooleanExpr> --- <V> <LOP>
<LOP> --- <logicalOp> <V> <LOP> | EPSILON
<V> --- <arithmeticExpr> <ROP> | <booleanConst>
<ROP> --- <relationalOp> <arithmeticExpr> | EPSILON
<arithmeticExpr> --- <Term> <Factor>
<Factor> --- PLUS <Term> <Factor> | MINUS <Term> <Factor> | EPSILON
<Term> --- <Term1> <Term2>
<Term2> --- MUL <Term1> <Term2> | DIV <Term1> <Term2> | EPSILON
<Term1> --- BO <arithmeticBooleanExpr> BC | <var>
<logicalOp> --- AND | OR
<relationalOp> --- LT | LE | GT | GE | EQ | NE
<declareStmt> --- DECLARE <idList> COLON <dataType> SEMICOL
<condionalStmt> --- SWITCH BO ID BC START <caseStmts> <default> END
<caseStmts> --- <caseStmt> <caseStmt1>
<caseStmt1> --- <caseStmt> <caseStmt1> | EPSILON
<caseStmt> --- CASE <value> COLON <statements> BREAK SEMICOL
<value> --- NUM | TRUE | FALSE
<default> --- DEFAULT COLON <statements> BREAK SEMICOL | EPSILON
<iterativeStmt> --- FOR BO ID IN <range> BC START <statements> END | WHILE BO <arithmeticBooleanExpr> BC START <statements> END
<range> --- NUM RANGEOP NUM
<range1> --- <index> RANGEOP <index>
